User Story: Обработка ошибок и выброс пользовательского исключения

Как исследователь данных,

Я хочу создать программу для проведения расчетов на основе данных, полученных от пользователя, чтобы исследовать интересные числовые данные и получить результаты.

Чтобы обрабатывать возможные ошибки и выбрасывать пользовательское исключение при делении на ноль или некорректном вводе чисел.

Критерии приемки:

Написана функция CalculateDivision, которая принимает два числа в качестве аргументов и выполняет деление первого числа на второе.
Если второе число равно нулю, функция выбрасывает пользовательское исключение DivideByZeroException с сообщением "Ошибка: деление на ноль недопустимо."
В случае успешного деления, функция возвращает результат.
В функции Main реализован вложенный код с использованием блоков try-catch для обработки возможных исключений:
Во внешнем блоке try-catch обрабатываются исключения типа DivideByZeroException и выводится сообщение об ошибке "Ошибка: деление на ноль недопустимо."
Во внутреннем блоке try-catch обрабатываются исключения типа FormatException и выводится сообщение об ошибке "Ошибка: неверный формат числа."
Добавлен общий блок catch, который обрабатывает любые другие возможные исключения и выводит сообщение "Произошла неизвестная ошибка."
Дополнительная информация:

Программа представляет собой удобный инструмент для исследователей данных, позволяющий изучать и обрабатывать разнообразные числовые данные с возможностью предотвращения и обработки ошибок при выполнении деления и вводе данных. Возможные ошибки деления на ноль или некорректного ввода чисел обрабатываются с помощью пользовательских исключений, а вложенный код с блоками try-catch обеспечивает стабильность и надежность программы.

Простой уровень (10 заданий):

1. Выведите список всех клиентов.
SELECT * FROM sales.customers;

2. Выведите первые 5 заказов.
SELECT TOP 5 * FROM sales.orders;

3. Найдите все категории и количество продуктов в каждой категории.

SELECT c.category_name, COUNT(p.product_id) AS количество_продуктов
FROM production.categories c
LEFT JOIN production.products p ON c.category_id = p.category_id
GROUP BY c.category_name;

4. Выведите продукты с ценой выше 1000 долларов.
SELECT * FROM production.products
WHERE list_price > 1000.00;

5. Найдите клиентов, проживающих в городе 'Лос-Анджелес'.
SELECT * FROM sales.customers
WHERE city = 'Лос-Анджелес';

6.Обновите email клиента с customer_id = 1.
UPDATE sales.customers
SET email = 'новыйemail@example.com'
WHERE customer_id = 1;

7.Удалите все продукты с годом выпуска меньше 2015.
DELETE FROM production.products
WHERE model_year < 2015;

8. Рассчитайте общую стоимость каждого заказа (количество * цена) и выведите их в порядке убывания.
SELECT order_id, SUM(quantity * list_price) AS общая_стоимость
FROM sales.order_items
GROUP BY order_id
ORDER BY общая_стоимость DESC;

8.Найдите сотрудников, которые являются менеджерами (manager_id не пустой).
SELECT * FROM sales.staffs
WHERE manager_id IS NOT NULL;

9.Найдите продукты, которые отсутствуют на складе (количество равно 0).
SELECT p.product_name, s.quantity
FROM production.products p
LEFT JOIN production.stocks s ON p.product_id = s.product_id
WHERE s.quantity = 0;


Средний уровень (7 заданий):

1.Выведите список всех сотрудников, включая информацию о магазине, в котором они работают.
SELECT s.*, st.store_name
FROM sales.staffs s
LEFT JOIN sales.stores st ON s.store_id = st.store_id;

2.Для каждого заказа выведите количество продуктов, среднюю цену продукта в заказе и общую стоимость заказа.
SELECT oi.order_id, COUNT(oi.product_id) AS количество_продуктов,
       AVG(p.list_price) AS средняя_цена_продукта,
       SUM(oi.quantity * p.list_price) AS общая_стоимость
FROM sales.order_items oi
JOIN production.products p ON oi.product_id = p.product_id
GROUP BY oi.order_id;

3.Найдите клиентов, у которых нет заказов.
SELECT c.*
FROM sales.customers c
LEFT JOIN sales.orders o ON c.customer_id = o.customer_id
WHERE o.order_id IS NULL;

4.Посчитайте общее количество продуктов в наличии в каждом магазине.
SELECT st.store_name, SUM(s.quantity) AS общее_количество_продуктов
FROM production.stocks s
JOIN sales.stores st ON s.store_id = st.store_id
GROUP BY st.store_name;

5.Найдите всех сотрудников, у которых аккаунт не был активирован (active = 0), и выведите их имена.
SELECT first_name, last_name
FROM sales.staffs
WHERE active = 0;

6.Для каждой категории продуктов найдите среднюю цену и максимальную цену продукта в этой категории.
SELECT c.category_name, AVG(p.list_price) AS средняя_цена, MAX(p.list_price) AS максимальная_цена
FROM production.categories c
JOIN production.products p ON c.category_id = p.category_id
GROUP BY c.category_name;

7.Выведите список продуктов, отсортированных по убыванию цены.
SELECT * FROM production.products
ORDER BY list_price DESC;


Продвинутый уровень (5 заданий):

1.Для каждого клиента найдите общую сумму денег, которую они потратили на заказы.
SELECT c.first_name, c.last_name, SUM(oi.quantity * p.list_price) AS общая_сумма_заказов
FROM sales.customers c
LEFT JOIN sales.orders o ON c.customer_id = o.customer_id
LEFT JOIN sales.order_items oi ON o.order_id = oi.order_id
LEFT JOIN production.products p ON oi.product_id = p.product_id
GROUP BY c.first_name, c.last_name;

2.Найдите самый дорогой заказ и выведите информацию о нем.
SELECT TOP 1 o.order_id, c.first_name, c.last_name, MAX(oi.quantity * p.list_price) AS общая_стоимость
FROM sales.orders o
JOIN sales.customers c ON o.customer_id = c.customer_id
JOIN sales.order_items oi ON o.order_id = oi.order_id
JOIN production.products p ON oi.product_id = p.product_id
GROUP BY o.order_id, c.first_name, c.last_name
ORDER BY общая_стоимость DESC;

3.Посчитайте общее количество продуктов, проданных в каждом магазине, за последний месяц.
SELECT st.store_name, SUM(oi.quantity) AS общее_количество_продуктов
FROM sales.orders o
JOIN sales.stores st ON o.store_id = st.store_id
JOIN sales.order_items oi ON o.order_id = oi.order_id
WHERE DATEDIFF(MONTH, o.order_date, GETDATE()) = 1
GROUP BY st.store_name;

4.Найдите клиентов, сделавших наибольшее количество заказов.
WITH CustomerOrders AS (
    SELECT c.customer_id, COUNT(o.order_id) AS количество_заказов
    FROM sales.customers c
    LEFT JOIN sales.orders o ON c.customer_id = o.customer_id
    GROUP BY c.customer_id
)
SELECT c.first_name, c.last_name
FROM sales.customers c
JOIN CustomerOrders co ON c.customer_id = co.customer_id
WHERE co.количество_заказов = (SELECT MAX(количество_заказов) FROM CustomerOrders);

5.Для каждого магазина найдите среднее количество сотрудников, работающих в нем.
SELECT st.store_name, AVG(s.staff_id) AS среднее_количество_сотрудников
FROM sales.stores st
LEFT JOIN sales.staffs s ON st.store_id = s.store_id
GROUP BY st.store_name;

Сложный уровень (4 задания):

1.Создайте запрос, который выведет все продукты, которых нет в заказах.
SELECT p.product_name
FROM production.products p
WHERE p.product_id NOT IN (SELECT DISTINCT product_id FROM sales.order_items);

2.Создайте запрос, который найдет клиентов, сделавших заказы во всех категориях продуктов.
SELECT c.customer_id, c.first_name, c.last_name
FROM sales.customers c
JOIN (
    SELECT c.customer_id, COUNT(DISTINCT p.category_id) AS количество_категорий
    FROM sales.customers c
    JOIN sales.orders o ON c.customer_id = o.customer_id
    JOIN sales.order_items oi ON o.order_id = oi.order_id
    JOIN production.products p ON oi.product_id = p.product_id
    GROUP BY c.customer_id
) subquery ON c.customer_id = subquery.customer_id
WHERE subquery.количество_категорий = (SELECT COUNT(*) FROM production.categories);

3.Найдите магазины, в которых продажи самых дорогих продуктов (по средней цене продукта) превышают средние продажи по всем магазинам.
WITH MaxPricePerStore AS (
    SELECT st.store_id, MAX(p.list_price) AS максимальная_цена
    FROM sales.stores st
    JOIN sales.orders o ON st.store_id = o.store_id
    JOIN sales.order_items oi ON o.order_id = oi.order_id
    JOIN production.products p ON oi.product_id = p.product_id
    GROUP BY st.store_id
)
SELECT st.store_name
FROM sales.stores st
JOIN MaxPricePerStore mp ON st.store_id = mp.store_id
WHERE mp.максимальная_цена > (
    SELECT AVG(p.list_price)
    FROM production.products p
);

4.Создайте запрос, который найдет сотрудников, у которых есть подчиненные (кто-то имеет manager_id), и выведите их имена и количество подчиненных.
WITH EmployeeHierarchy AS (
    SELECT manager_id, COUNT(*) AS количество_подчиненных
    FROM sales.staffs
    WHERE manager_id IS NOT NULL
    GROUP BY manager_id
)
SELECT s1.first_name, s1.last_name, eh.количество_подчиненных
FROM sales.staffs s1
JOIN EmployeeHierarchy eh ON s1.staff_id = eh.manager_id;

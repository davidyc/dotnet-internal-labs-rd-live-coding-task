-- Создание базы данных, если её нет
IF NOT EXISTS (SELECT name FROM sys.databases WHERE name = 'mydatabase')
BEGIN
    CREATE DATABASE mydatabase;
END
GO

USE mydatabase;
GO

-- Проверка на существование таблицы "Users" и её создание
IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'Users')
BEGIN
    CREATE TABLE Users (
        UserID INT PRIMARY KEY IDENTITY,
        FirstName VARCHAR(50),
        LastName VARCHAR(50),
        Email VARCHAR(100) UNIQUE,
        Password VARCHAR(100)
    );
END
GO

-- Проверка на существование таблицы "Addresses" и её создание
IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'Addresses')
BEGIN
    CREATE TABLE Addresses (
        AddressID INT PRIMARY KEY IDENTITY,
        UserID INT,
        StreetAddress VARCHAR(100),
        City VARCHAR(50),
        State VARCHAR(50),
        PostalCode VARCHAR(20),
        FOREIGN KEY (UserID) REFERENCES Users(UserID)
    );
END
GO

-- Проверка на существование таблицы "Orders" и её создание
IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'Orders')
BEGIN
    CREATE TABLE Orders (
        OrderID INT PRIMARY KEY IDENTITY,
        UserID INT,
        OrderDate DATE,
        TotalAmount DECIMAL(10, 2),
        FOREIGN KEY (UserID) REFERENCES Users(UserID)
    );
END
GO

-- Проверка на существование таблицы "Products" и её создание
IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'Products')
BEGIN
    CREATE TABLE Products (
        ProductID INT PRIMARY KEY IDENTITY,
        ProductName VARCHAR(100),
        Price DECIMAL(10, 2)
    );
END
GO

-- Проверка на существование таблицы "OrderItems" и её создание
IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'OrderItems')
BEGIN
    CREATE TABLE OrderItems (
        OrderItemID INT PRIMARY KEY IDENTITY,
        OrderID INT,
        ProductID INT,
        Quantity INT,
        FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
        FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
    );
END
GO


-- Вставка данных в таблицу "Users"
INSERT INTO Users (FirstName, LastName, Email, Password)
VALUES
    ('Иван', 'Иванов', 'ivan@example.com', 'password1'),
    ('Мария', 'Петрова', 'maria@example.com', 'password2'),
    ('Алексей', 'Сидоров', 'alex@example.com', 'password3');

-- Вставка данных в таблицу "Addresses"
INSERT INTO Addresses (UserID, StreetAddress, City, State, PostalCode)
VALUES
    (1, 'ул. Ленина, 123', 'Москва', 'Московская область', '12345'),
    (2, 'ул. Пушкина, 456', 'Санкт-Петербург', 'Ленинградская область', '54321');

-- Вставка данных в таблицу "Products"
INSERT INTO Products (ProductName, Price)
VALUES
    ('Ноутбук', 999.99),
    ('Смартфон', 499.99),
    ('Планшет', 299.99);

-- Вставка данных в таблицу "Orders"
INSERT INTO Orders (UserID, OrderDate, TotalAmount)
VALUES
    (1, '2023-08-22', 1299.98),
    (2, '2023-08-23', 799.98);

-- Вставка данных в таблицу "OrderItems"
INSERT INTO OrderItems (OrderID, ProductID, Quantity)
VALUES
    (IDENT_CURRENT('Orders'), 1, 1),
    (IDENT_CURRENT('Orders'), 2, 2),
    (IDENT_CURRENT('Orders'), 2, 1),
    (IDENT_CURRENT('Orders'), 3, 3);

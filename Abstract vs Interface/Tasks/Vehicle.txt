Задание: Вынесение методов из интерфейса в абстрактный класс

Цель задания: Практика в выносе общей функциональности из интерфейса в абстрактный класс.

Описание:

Создайте интерфейс IVehicle, который будет представлять функциональность для различных типов транспортных средств. В интерфейсе объявите следующие методы:

void Start(): Метод, который будет запускать транспортное средство.
void Stop(): Метод, который будет останавливать транспортное средство.
void Accelerate(int speed): Метод, который будет ускорять транспортное средство на заданную скорость.
Создайте класс VehicleBase, который будет абстрактным и реализует интерфейс IVehicle. В этом абстрактном классе вынесите общую логику для всех транспортных средств, которая будет использоваться во всех типах транспортных средств. Например, метод Start может иметь общую реализацию для всех транспортных средств, а метод Stop может содержать общий код для остановки.

Создайте два класса, которые реализуют интерфейс IVehicle:
Car: Класс, представляющий автомобиль. Реализуйте только специфичные для автомобиля методы.
Bicycle: Класс, представляющий велосипед. Реализуйте только специфичные для велосипеда методы.
В основной части программы создайте объекты Car и Bicycle и продемонстрируйте использование методов Start, Stop и Accelerate для каждого из классов.
Теперь вынесите общие методы из интерфейса IVehicle в абстрактный класс VehicleBase, уберите эти методы из интерфейса, и снова запустите программу. Убедитесь, что методы из абстрактного класса успешно наследуются в классах Car и Bicycle.

Ответьте на следующие вопросы:
Какие методы были вынесены из интерфейса IVehicle в абстрактный класс VehicleBase и почему?
Какие преимущества вы видите в вынесении общей логики в абстрактный класс?
В чем разница между интерфейсами и абстрактными классами, особенно в контексте этой задачи?
Это задание позволит студентам лучше понять различия между интерфейсами и абстрактными классами, а также как использовать абстрактные классы для вынесения общей логики и методов, которые могут быть переиспользованы в нескольких классах.